---
import Layout from '@/layouts/Layout.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import Icon from '@/components/Icon.astro';
import { getTranslations, getStaticPaths, type Language } from '@/i18n';

export { getStaticPaths };

const { lang } = Astro.params as { lang: Language };
const t = getTranslations(lang);
const currentPath = `/${lang}/contact`;
---

<Layout
  title={t.contact.title}
  description={t.contact.description}
  lang={lang}
  currentPath={currentPath}
>
  <Header lang={lang} currentPath={currentPath} />

  <main>
    <!-- Hero Section -->
    <section class="py-20 bg-gradient-to-br from-navy to-navy-light text-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h1 class="text-4xl md:text-5xl font-bold mb-6">
          {t.contact.title}
        </h1>
        <p class="text-xl text-gray-200 max-w-3xl mx-auto">
          {t.contact.description}
        </p>
      </div>
    </section>

    <!-- Contact Section -->
    <section class="py-20">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
          <!-- Contact Form -->
          <div>
            <h2 class="text-3xl font-bold text-navy mb-8">{t.contact.info.title}</h2>
            <p class="text-gray-600 mb-8">{t.contact.info.description}</p>

            <form class="space-y-6" id="contact-form">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
                    {t.contact.form.name}
                    <span class="text-red-500">*</span>
                  </label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-navy focus:border-transparent transition-colors duration-200"
                  />
                </div>
                <div>
                  <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                    {t.contact.form.email}
                    <span class="text-red-500">*</span>
                  </label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    required
                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-navy focus:border-transparent transition-colors duration-200"
                  />
                </div>
              </div>

              <div>
                <label for="subject" class="block text-sm font-medium text-gray-700 mb-2">
                  {t.contact.form.phone}
                  <span class="text-red-500">*</span>
                </label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-navy focus:border-transparent transition-colors duration-200"
                />
              </div>

              <div>
                <label for="message" class="block text-sm font-medium text-gray-700 mb-2">
                  {t.contact.form.message}
                  <span class="text-red-500">*</span>
                </label>
                <textarea
                  id="message"
                  name="message"
                  rows="6"
                  required
                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-navy focus:border-transparent transition-colors duration-200 resize-vertical"
                ></textarea>
              </div>

              <button
                type="submit"
                class="w-full bg-navy text-white px-8 py-4 rounded-lg text-lg font-semibold hover:bg-navy-light transition-colors duration-200 focus:outline-none focus:ring-4 focus:ring-navy focus:ring-opacity-50"
              >
                {t.contact.form.submit}
              </button>
            </form>
          </div>

          <!-- Contact Information -->
          <div>
            <div class="bg-gray-50 rounded-xl p-8 h-full">
              <h3 class="text-2xl font-bold text-navy mb-8">
                {lang === 'en' ? 'Contact Information' : 'Informazioni di Contatto'}
              </h3>

              <div class="space-y-6">
                <!-- Address -->
                {
                  t.whereWeAre.locations.map(office => (
                    <div class="flex items-start">
                      <div class="w-12 h-12 bg-navy rounded-lg flex items-center justify-center mr-4 flex-shrink-0">
                        <Icon name="MapPin" class="w-6 h-6 text-gold" size={24} />
                      </div>
                      <div>
                        <h4 class="font-semibold text-navy mb-1">{office.subtitle}</h4>
                        <a
                          href={office.googleMapsUrl}
                          target="_blank"
                          rel="noopener noreferrer"
                          class="text-gray-700 text-lg underline hover:text-gold transition-colors duration-200"
                        >
                          {office.address}
                        </a>
                      </div>
                    </div>
                  ))
                }

                <!-- Phone -->
                <div class="flex items-start">
                  <div
                    class="w-12 h-12 bg-navy rounded-lg flex items-center justify-center mr-4 flex-shrink-0"
                  >
                    <Icon name="Phone" class="w-6 h-6 text-gold" size={24} />
                  </div>
                  <div>
                    <h4 class="font-semibold text-navy mb-1">{t.common.phone}</h4>
                    <a
                      href={`tel:${t.footer.phone}`}
                      class="hover:text-gold transition-colors duration-200"
                    >
                      {t.footer.phone}
                    </a>
                  </div>
                </div>

                <!-- Email -->
                <div class="flex items-start">
                  <div
                    class="w-12 h-12 bg-navy rounded-lg flex items-center justify-center mr-4 flex-shrink-0"
                  >
                    <Icon name="Mail" class="w-6 h-6 text-gold" size={24} />
                  </div>
                  <div>
                    <h4 class="font-semibold text-navy mb-1">{t.common.email}</h4>
                    <a
                      href={`mailto:${t.footer.email}`}
                      class="hover:text-gold transition-colors duration-200"
                    >
                      {t.footer.email}
                    </a>
                  </div>
                </div>

                <!-- Office Hours -->
                <div class="flex items-start">
                  <div
                    class="w-12 h-12 bg-navy rounded-lg flex items-center justify-center mr-4 flex-shrink-0"
                  >
                    <Icon name="Clock" class="w-6 h-6 text-gold" size={24} />
                  </div>
                  <div>
                    <h4 class="font-semibold text-navy mb-1">{t.footer.officeHours}</h4>
                    <div class="text-gray-600">
                      {t.footer.officeHoursDescription}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <Footer lang={lang} />
</Layout>

<script>
  // Contact Form Handling
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('contact-form');

    form?.addEventListener('submit', function (e) {
      e.preventDefault();

      // Basic form validation
      const formData = new FormData(form as HTMLFormElement);
      const name = formData.get('name') as string;
      const email = formData.get('email') as string;
      const subject = formData.get('subject') as string;
      const message = formData.get('message') as string;

      if (!name || !email || !subject || !message) {
        alert('Please fill in all required fields.');
        return;
      }

      // Email validation
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(email)) {
        alert('Please enter a valid email address.');
        return;
      }

      // Simulate form submission
      const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
      const originalText = submitBtn.textContent;

      submitBtn.disabled = true;
      submitBtn.textContent = 'Sending...';

      // Simulate API call
      setTimeout(() => {
        alert('Thank you for your message. We will get back to you soon!');
        (form as HTMLFormElement).reset();
        submitBtn.disabled = false;
        submitBtn.textContent = originalText;
      }, 2000);
    });
  });
</script>
