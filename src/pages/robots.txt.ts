export const prerender = true;

export function GET({ site, url }: { site?: URL; url: URL }) {
  // Use full configured site (including pathname) if available, fallback to current request origin.
  const root = (site?.toString() ?? url.origin).replace(/\/?$/, '/');
  const base = import.meta.env.BASE_URL || '/';
  const baseUrl = new URL(base, root);

  // Point to the sitemap(s) generated by @astrojs/sitemap
  const sitemapIndex = new URL('sitemap-index.xml', baseUrl).toString();
  const sitemapSingle = new URL('sitemap-0.xml', baseUrl).toString();

  const body = [
    'User-agent: *', //
    'Allow: /',
    'Allow: /images/',
    `Sitemap: ${sitemapIndex}`,
    `Sitemap: ${sitemapSingle}`,
    `Host: ${root}`,
    '',
  ].join('\n');

  return new Response(body, {
    headers: {
      'Content-Type': 'text/plain; charset=utf-8',
      'Cache-Control': 'public, max-age=300, s-maxage=600',
    },
  });
}
