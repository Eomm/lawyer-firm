---
import { getTranslations, type Language } from '@/i18n';
import { Image } from 'astro:assets';
import './Header.css';

// Import logo
import logoSvg from '/public/logo.svg';

export interface Props {
  lang: Language;
  currentPath?: string;
}

const { lang, currentPath = '' } = Astro.props;
const t = getTranslations(lang);
const baseUrl = import.meta.env.BASE_URL || '';

const navItems = [
  { href: `${baseUrl}${lang}`, label: t.nav.home },
  { href: `${baseUrl}${lang}/team`, label: t.nav.team },
  { href: `${baseUrl}${lang}/faq`, label: t.nav.faq },
  { href: `${baseUrl}${lang}/contact`, label: t.nav.contact },
  { href: `${baseUrl}${lang}/where-we-are`, label: t.nav.whereWeAre },
];

const otherLang = lang === 'en' ? 'it' : 'en';
const langSwitchPath = currentPath.replace(`/${lang}`, `${baseUrl}${otherLang}`) || `${baseUrl}${otherLang}`;
---

<header class="bg-white shadow-lg sticky top-0 z-50">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" aria-label="Main navigation">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href={`${baseUrl}${lang}`} class="flex items-center space-x-3">
          <Image src={logoSvg} alt="Studio Legale Ferrini Logo" class="h-20 w-20" width={80} height={80} />
          <span class="text-xl font-bold text-navy">Studio Legale Ferrini</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="desktop-nav">
        <div class="ml-10 flex items-baseline space-x-4">
          {
            navItems.map(item => (
              <a
                href={item.href}
                class={`px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 ${
                  currentPath === item.href
                    ? 'bg-navy text-white'
                    : 'text-navy hover:bg-navy hover:text-white'
                }`}
                aria-current={currentPath === item.href ? 'page' : undefined}
              >
                {item.label}
              </a>
            ))
          }
        </div>
      </div>

      <!-- Language Switcher & CTA -->
      <div class="desktop-nav-actions flex items-center space-x-4">
        <a
          href={langSwitchPath}
          class="text-sm text-navy hover:text-gold transition-colors duration-200"
          aria-label={`Switch to ${otherLang.toUpperCase()}`}
        >
          {otherLang.toUpperCase()}
        </a>
        <a
          href={`${baseUrl}${lang}/contact`}
          class="bg-gold text-navy px-4 py-2 rounded-md text-sm font-medium hover:bg-opacity-90 transition-colors duration-200"
        >
          {t.common.bookConsultation}
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="mobile-menu-toggle">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-navy hover:text-white hover:bg-navy focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <!-- Menu icon -->
          <svg
            class="block h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <!-- Close icon (hidden by default) -->
          <svg
            class="hidden h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="mobile-menu hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t">
        {
          navItems.map(item => (
            <a
              href={item.href}
              class={`block px-3 py-2 rounded-md text-base font-medium transition-colors duration-200 ${
                currentPath === item.href
                  ? 'bg-navy text-white'
                  : 'text-navy hover:bg-navy hover:text-white'
              }`}
              aria-current={currentPath === item.href ? 'page' : undefined}
            >
              {item.label}
            </a>
          ))
        }
        <div class="border-t pt-3 mt-3 flex justify-between items-center">
          <a
            href={langSwitchPath}
            class="text-sm text-navy hover:text-gold transition-colors duration-200"
            aria-label={`Switch to ${otherLang.toUpperCase()}`}
          >
            {otherLang.toUpperCase()}
          </a>
          <a
            href={`${baseUrl}${lang}/contact`}
            class="bg-gold text-navy px-4 py-2 rounded-md text-sm font-medium hover:bg-opacity-90 transition-colors duration-200"
          >
            {t.common.bookConsultation}
          </a>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', function () {
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    const menuIcon = mobileMenuButton?.querySelector('svg:first-child');
    const closeIcon = mobileMenuButton?.querySelector('svg:last-child');

    mobileMenuButton?.addEventListener('click', function () {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';

      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileMenu?.classList.toggle('hidden');
      menuIcon?.classList.toggle('hidden');
      closeIcon?.classList.toggle('hidden');
    });
  });
</script>
